{"version":3,"sources":["components/heatmapBuilder.js","components/Heatmap.jsx","components/List.jsx","components/Page.jsx","App.js","reportWebVitals.js","index.js"],"names":["heatmapBuilder","data0","containerEl","setFilteredData","margin","width","window","screen","height","selected","data","columns","Object","keys","i","length","j","push","group","variable","value","formatData","svg","d3","append","attr","myGroups","d","myVars","rep","replaceAll","x","range","domain","style","call","tickSize","select","remove","selectAll","y","cells","enter","on","selectedName","selectedNameIdx","indexOf","isSelected","splice","map","find","User","this","forEach","elem","bandwidth","colorValues","myColor","text","HeatMap","props","containerRef","useRef","drawChart","useCallback","useLayoutEffect","current","size","userData","class","className","ref","useStyles","makeStyles","table","minWidth","backgroundColor","color","marginTop","marginLeft","List","field","headerName","rows","id","classes","Page","useState","filteredData","Heatmap","App","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.116ae990.chunk.js","sourcesContent":["import * as d3 from 'd3';\n/** \n * Base code retrieved from https://www.d3-graph-gallery.com/graph/heatmap_style.html \n*/\n\nconst formatData = (data0) => {\n  //Read the data\n  const data = [];\n  const columns = Object.keys(data0[0]);\n\n  // Main matrix\n  for (let i = 0; i < data0.length; i++) {\n    for (let j = 1; j < columns.length; j++) {\n      data.push({\n        group: data0[i]['User'],\n        variable: columns[j],\n        value: data0[i][columns[j]]\n      });\n    }\n  }\n  return data;\n}\n\nconst heatmapBuilder = (data0, containerEl, setFilteredData) => {\n  // set the dimensions and margins of the graph\n\n  const margin = { top: 0, right: 25, bottom: 100, left: 110 },\n    width = (window.screen.width * 0.8) - margin.left - margin.right,\n    height = width / 2.5 - margin.top - margin.bottom;\n\n  const selected = [];\n  const data = formatData(data0);\n\n  // append the svg object to the body of the page\n  const svg = d3.select(containerEl)\n    .append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n    .attr(\"transform\",\n      \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n  // Labels of row and columns -> unique identifier of the column called 'group' and 'variable'\n  const myGroups = d3.map(data, function (d) { return d.group; }).keys()\n  const myVars = d3.map(data, function (d) { return d.variable; }).keys()\n\n  const rep = d => d.replaceAll(' ', '_');\n\n  // Build X scales and axis:\n  const x = d3.scaleBand()\n    .range([0, width])\n    .domain(myGroups);\n\n  // Append axis legend\n  svg.append(\"g\")\n    .style(\"font-size\", 12)\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(d3.axisBottom(x).tickSize(0))\n    .select(\".domain\").remove()\n\n  //Rotate axis values\n  svg.selectAll('text').attr('transform', 'rotate(-45)')\n    .attr(\"text-anchor\", 'end')\n\n  // Build Y scales and axis:\n  const y = d3.scaleBand()\n    .range([height, 0])\n    .domain(myVars);\n\n  // Append axis legend\n  svg.append(\"g\")\n    .style(\"font-size\", 12)\n    .call(d3.axisLeft(y).tickSize(0))\n    .select(\".domain\").remove()\n\n  // Build color scale\n  const myColor = (value) => {\n    let colorValues = [\n      '#004526',\n      '#006E3C',\n      '#008C51',\n      '#00A263',\n      '#00B072',\n      '#28C98C',\n      '#50DDA4',\n      '#78ECBB',\n      '#A0F7D1',\n      '#C8FEE5',\n      '#F0FFF8'\n    ];\n\n    return colorValues[colorValues.length - 1 - value];\n  }\n\n  // Mouse interactions\n  const mouseover = function (d) {\n    svg.selectAll('rect').style('opacity', 0.25);\n    svg.selectAll(`.${rep(d.variable)}`).selectAll('rect').style('opacity', 0.4);\n    svg.selectAll(`.${rep(d.group)}`).selectAll('rect').style('opacity', 0.9);\n    svg.selectAll(`.${rep(d.group)}`).selectAll('text').style('opacity', 0.9);\n    d3.select(this).style('opacity', 1);\n    selected.forEach(elem => {\n      d3.selectAll(`.${rep(elem)}`).selectAll('rect')\n      .style(\"opacity\", 0.9);\n      d3.selectAll(`.${rep(elem)}`).selectAll('text')\n      .style(\"opacity\", 1);\n    });\n  }\n\n  const mouseleave = function (d) {\n    svg.selectAll('rect').style('opacity', selected.length < 1 ? 1 : 0.25);\n    svg.selectAll(`.${rep(d.group)}`).selectAll('text').style('opacity', 0);\n    d3.select(this).style(\"opacity\", 1);\n    selected.forEach(elem => {\n      d3.selectAll(`.${rep(elem)}`).selectAll('rect')\n      .style(\"opacity\", 0.9);\n      d3.selectAll(`.${rep(elem)}`).selectAll('text')\n      .style(\"opacity\", 1);\n    });\n  }\n\n  const click = function (d) {\n    const selectedName = d.group;\n    const selectedNameIdx = selected.indexOf(selectedName);\n    const isSelected = selectedNameIdx > -1;\n    isSelected ? selected.splice(selectedNameIdx, 1) : selected.push(selectedName);\n\n    d3.selectAll(`.${rep(d.group)}`).selectAll('rect')\n      .style(\"opacity\", isSelected ? 0.25 : 0.9);\n    const data = selected.map(x => data0.find(data => data.User === x));\n    setFilteredData(data.length > 0 ? data : data0);\n  }\n\n  // Add the squares\n  const cells = svg.selectAll()\n    .data(data, function (d) { return d.group + ':' + d.variable; })\n    .enter()\n    .append(\"g\")\n    .attr('class', (d) => `${rep(d.variable)} ${rep(d.group)}`)\n    .on(\"click\", click)\n    .on(\"mouseover\", mouseover)\n    .on(\"mouseleave\", mouseleave);\n\n  // Append the square\n  cells.append(\"rect\")\n    .attr(\"x\", function (d) { return x(d.group) })\n    .attr(\"y\", function (d) { return y(d.variable) })\n    .attr(\"width\", x.bandwidth())\n    .attr(\"height\", y.bandwidth())\n    .style(\"fill\", function (d) { return myColor(d.value) })\n    .style(\"stroke-width\", 4)\n    .style(\"stroke\", \"none\")\n    .style(\"opacity\", 1);\n\n  // Append the legend\n  cells.append(\"text\")\n    .attr(\"x\", function (d) { return x(d.group) + x.bandwidth() / 2; })\n    .attr(\"y\", function (d) { return y(d.variable) + y.bandwidth() / 2; })\n    .attr(\"text-anchor\", 'middle')\n    .attr(\"dy\", \".35em\")\n    .style('opacity', 0)\n    .style(\"font-size\", \"20px\")\n    .style('fill', 'white')\n    .text(function (d) { return d.value; });\n};\n\n\nexport default heatmapBuilder;","import React, { useLayoutEffect, useRef, useCallback } from 'react';\nimport * as d3 from 'd3';\nimport heatmapBuilder from './heatmapBuilder';\n\nconst HeatMap = (props) => {\n  const containerRef = useRef(null);\n\n  const drawChart = useCallback(heatmapBuilder, []);\n\n  useLayoutEffect(() => {\n    if (containerRef?.current) {\n      const children = d3.select(containerRef?.current).selectAll('svg');\n      if (children.size() !== 0) {\n        d3.select(containerRef?.current).selectAll('svg').remove();\n      }\n      drawChart(props.userData, containerRef.current, props.setFilteredData);\n    }\n  }, [drawChart, props.setFilteredData, props.userData]);\n\n\n  // Student's skills\n  // Hover over the cells to see the specific skills of the student. Select one cell to add the student to the group list.\n\n  return (\n    <>\n      <div class=\"heatmapHead\">\n        <div class=\"titleBox\">\n          <h1>Student's skills</h1>\n          <h3>Hover over the cells to see the specific skills of the student. Select one cell to add the student to the group list.</h3>\n        </div>\n        <div className=\"keyBox\">\n          <h5>Key</h5>\n          <div className=\"keyColor\"></div>\n          <div className=\"keyLegend\">\n            <p>Less skilled</p>\n            <p>More skilled</p>\n          </div>\n        </div>\n      </div>\n      <div ref={containerRef} />\n    </>\n  );\n}\n\nexport default HeatMap;\n","import { makeStyles } from '@material-ui/core/styles';\nimport { DataGrid } from '@material-ui/data-grid';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: '700px',\n    backgroundColor: '#21242c',\n    color: 'white!important',\n    height: '400px', \n    width: '1300px',\n    marginTop: '50px',\n    marginLeft: '10px'\n  },\n});\n\nconst List = (props) => {\n  const columns = Object.keys(props.userData[0]).map((value) => ({ field: value, headerName: value }));\n  const rows = props.userData.map((value, id) => ({ ...value, id }));\n\n  const classes = useStyles();\n  \n  return (\n    <div className={classes.table}>\n      <DataGrid rows={rows} columns={columns} />\n    </div>\n  );\n}\n\nexport default List;\n","import Heatmap from './Heatmap';\nimport List from './List';\nimport React, { useState } from 'react';\n\nconst Page = (props) => {\n  const [filteredData, setFilteredData] = useState(props.userData);\n  return (\n    <>\n      <Heatmap setFilteredData={setFilteredData} userData={props.userData}/>\n      <List userData={filteredData}/>\n    </>\n  );\n}\n\nexport default Page;\n","import './App.css';\nimport Page from './components/Page';\nimport userData from './datasets/ivis.json';\n\nconst App = (props) => {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>IVIS Group Formation</h1>\n        <h5>A D3-based tool for Information Visualization group formation</h5>\n      </header>\n      <div className=\"App-body\">\n        <Page userData={userData}/>\n      </div>\n      <div className=\"App-footer\">\n          By <a href=\"https://github.com/guceda\">Gonzalo Uceda</a> & <a href=\"https://github.com/dvcarrillo\">David Vargas</a> for DH2321\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}